name: Build and Deploy Spring Boot App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ① ソースコードをチェックアウト
      - name: Checkout
        uses: actions/checkout@v3

      # ② Java 17 をセットアップ
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # ③ JUnitテストを実行
      - name: Run JUnit tests
        working-directory: backend/demo
        run: mvn test

      # ④ Maven で Spring Boot アプリをビルド（テストは省略）
      - name: Build with Maven
        working-directory: backend/demo
        run: mvn package -DskipTests

      # ⑤ JAR ファイルを EC2 にアップロード
      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: backend/demo/target/demo-0.0.1-SNAPSHOT.jar
          target: /home/ec2-user/app/
          strip_components: 3

      # ⑥ EC2 上で Spring Boot アプリを再起動
      - name: Run app on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo systemctl restart demoapp
      
      # Node.js をセットアップ
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      # フロントエンドのビルド
      - name: Build React app
        working-directory: frontend
        run: |
          npm ci
          npm run build
              
      # ビルド成果物をEC2にアップロード
      - name: Upload React build to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: frontend/build/*
          target: /home/ec2-user/frontend_build/
          strip_components: 2
        
      # EC2上でNginxのセットアップとReactアプリのデプロイ（Amazon Linux 2023対応）
      - name: Setup Nginx and Deploy React app
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # Nginxがインストールされていない場合はインストール（Amazon Linux 2023）
            if ! command -v nginx &> /dev/null; then
              sudo dnf update -y
              sudo dnf install nginx -y
            fi
            
            # Nginxを起動・有効化
            sudo systemctl start nginx
            sudo systemctl enable nginx
            
            # ファイアウォール設定
            sudo firewall-cmd --permanent --add-service=http >/dev/null 2>&1 || true
            sudo firewall-cmd --reload >/dev/null 2>&1 || true
            
            # 古いファイルを削除してから新しいファイルをコピー
            sudo rm -rf /usr/share/nginx/html/*
            sudo cp -r /home/ec2-user/frontend_build/* /usr/share/nginx/html/
            
            # 権限を設定
            sudo chown -R nginx:nginx /usr/share/nginx/html/
            sudo chmod -R 755 /usr/share/nginx/html/
            
            # Nginxを再起動
            sudo systemctl restart nginx
            
            # ステータス確認
            sudo systemctl status nginx --no-pager