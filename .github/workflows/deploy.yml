name: Deploy to AWS EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

    - name: Build backend
      run: |
        cd backend/demo
        mvn clean package -DskipTests

    - name: Build frontend
      run: |
        cd frontend
        npm ci
        npm run build

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST_NAME: ${{ secrets.EC2_HOST }}
        USER_NAME: ec2-user
      run: |
        # SSH秘密鍵を設定
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        
        # バックエンドのデプロイ
        echo "Deploying backend..."
        scp -i private_key -o StrictHostKeyChecking=no backend/demo/target/demo-0.0.1-SNAPSHOT.jar ${USER_NAME}@${HOST_NAME}:/tmp/
        ssh -i private_key -o StrictHostKeyChecking=no ${USER_NAME}@${HOST_NAME} '
          ssh -i MyKeyPair.pem ec2-user@10.0.2.123 "
            pkill java || true
            cp /tmp/demo-0.0.1-SNAPSHOT.jar ~/demo-0.0.1-SNAPSHOT.jar
            nohup java -jar demo-0.0.1-SNAPSHOT.jar --server.address=0.0.0.0 > app.log 2>&1 &
          "
        '
        
        # フロントエンドのデプロ
        echo "Deploying frontend..."
        ssh -i private_key -o StrictHostKeyChecking=no ${USER_NAME}@${HOST_NAME} 'sudo rm -rf /usr/share/nginx/html/*'
        scp -i private_key -o StrictHostKeyChecking=no -r frontend/build/* ${USER_NAME}@${HOST_NAME}:/tmp/frontend/
        ssh -i private_key -o StrictHostKeyChecking=no ${USER_NAME}@${HOST_NAME} '
          sudo cp -r /tmp/frontend/* /usr/share/nginx/html/
          sudo chown -R nginx:nginx /usr/share/nginx/html/
          sudo systemctl restart nginx
        '
        
        # クリーンアップ
        rm -f private_key
